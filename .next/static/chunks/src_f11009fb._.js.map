{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Toast.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from 'react'\n\ninterface ToastProps {\n  message: string\n  duration?: number\n  onClose: () => void\n}\n\nexport default function Toast({ message, duration = 2000, onClose }: ToastProps) {\n  const [isVisible, setIsVisible] = useState(true)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(false)\n      setTimeout(onClose, 300) // Wait for fade out animation\n    }, duration)\n\n    return () => clearTimeout(timer)\n  }, [duration, onClose])\n\n  return (\n    <div\n      className={`\n        fixed bottom-4 right-4 bg-black text-white px-6 py-3 rounded-lg shadow-lg\n        transition-opacity duration-300 ease-in-out\n        ${isVisible ? 'opacity-100' : 'opacity-0'}\n      `}\n    >\n      {message}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAUe,SAAS,MAAM,EAAE,OAAO,EAAE,WAAW,IAAI,EAAE,OAAO,EAAc;;IAC7E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACR,MAAM,QAAQ;yCAAW;oBACvB,aAAa;oBACb,WAAW,SAAS,KAAK,8BAA8B;;gBACzD;wCAAG;YAEH;mCAAO,IAAM,aAAa;;QAC5B;0BAAG;QAAC;QAAU;KAAQ;IAEtB,qBACE,6LAAC;QACC,WAAW,CAAC;;;QAGV,EAAE,YAAY,gBAAgB,YAAY;MAC5C,CAAC;kBAEA;;;;;;AAGP;GAvBwB;KAAA","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/checkout/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useCart } from \"@/contexts/CartContext\"\nimport Link from \"next/link\"\nimport { useState } from \"react\"\nimport Toast from \"@/components/Toast\"\n\nexport default function CheckoutPage() {\n  const { items, totalItems, totalPrice, clearCart } = useCart()\n  const [showToast, setShowToast] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [formData, setFormData] = useState({\n    email: \"\",\n    name: \"\",\n    address: \"\",\n    city: \"\",\n    country: \"\",\n    postalCode: \"\"\n  })\n\n  if (items.length === 0) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"py-16 sm:py-24 text-center\">\n          <h1 className=\"text-4xl font-bold mb-8\">Checkout</h1>\n          <p className=\"text-gray-600 mb-8\">Your cart is empty</p>\n          <Link \n            href=\"/shop\" \n            className=\"inline-block bg-black text-white px-8 py-3 rounded-md hover:bg-gray-800 transition-colors\"\n          >\n            Continue Shopping\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsSubmitting(true)\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500))\n    \n    // Here you would typically send the order to your backend\n    clearCart()\n    setShowToast(true)\n    setIsSubmitting(false)\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }))\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div className=\"py-16 sm:py-24\">\n        <h1 className=\"text-4xl font-bold mb-12\">Checkout</h1>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12\">\n          {/* Order Summary */}\n          <div>\n            <h2 className=\"text-xl font-semibold mb-6\">Order Summary</h2>\n            <div className=\"space-y-4\">\n              {items.map((item) => (\n                <div key={item.id} className=\"flex gap-4\">\n                  <div className=\"w-20 h-20 flex-shrink-0\">\n                    <img\n                      src={item.image}\n                      alt={item.name}\n                      className=\"w-full h-full object-cover rounded-md\"\n                    />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium\">{item.name}</h3>\n                    <p className=\"text-gray-600\">Quantity: {item.quantity}</p>\n                    <p>${(item.price * item.quantity).toFixed(2)}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"border-t mt-6 pt-6\">\n              <div className=\"flex justify-between text-lg font-medium\">\n                <p>Total ({totalItems} items)</p>\n                <p>${totalPrice.toFixed(2)}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Checkout Form */}\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                required\n                disabled={isSubmitting}\n                value={formData.email}\n                onChange={handleInputChange}\n                className={`\n                  mt-1 block w-full rounded-md border px-3 py-2\n                  ${isSubmitting \n                    ? 'bg-gray-50 border-gray-200 cursor-not-allowed' \n                    : 'border-gray-300'\n                  }\n                `}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                Full Name\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                required\n                disabled={isSubmitting}\n                value={formData.name}\n                onChange={handleInputChange}\n                className={`\n                  mt-1 block w-full rounded-md border px-3 py-2\n                  ${isSubmitting \n                    ? 'bg-gray-50 border-gray-200 cursor-not-allowed' \n                    : 'border-gray-300'\n                  }\n                `}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\n                Address\n              </label>\n              <input\n                type=\"text\"\n                id=\"address\"\n                name=\"address\"\n                required\n                disabled={isSubmitting}\n                value={formData.address}\n                onChange={handleInputChange}\n                className={`\n                  mt-1 block w-full rounded-md border px-3 py-2\n                  ${isSubmitting \n                    ? 'bg-gray-50 border-gray-200 cursor-not-allowed' \n                    : 'border-gray-300'\n                  }\n                `}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                  City\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"city\"\n                  name=\"city\"\n                  required\n                  disabled={isSubmitting}\n                  value={formData.city}\n                  onChange={handleInputChange}\n                  className={`\n                    mt-1 block w-full rounded-md border px-3 py-2\n                    ${isSubmitting \n                      ? 'bg-gray-50 border-gray-200 cursor-not-allowed' \n                      : 'border-gray-300'\n                    }\n                  `}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"postalCode\" className=\"block text-sm font-medium text-gray-700\">\n                  Postal Code\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"postalCode\"\n                  name=\"postalCode\"\n                  required\n                  disabled={isSubmitting}\n                  value={formData.postalCode}\n                  onChange={handleInputChange}\n                  className={`\n                    mt-1 block w-full rounded-md border px-3 py-2\n                    ${isSubmitting \n                      ? 'bg-gray-50 border-gray-200 cursor-not-allowed' \n                      : 'border-gray-300'\n                    }\n                  `}\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700\">\n                Country\n              </label>\n              <input\n                type=\"text\"\n                id=\"country\"\n                name=\"country\"\n                required\n                disabled={isSubmitting}\n                value={formData.country}\n                onChange={handleInputChange}\n                className={`\n                  mt-1 block w-full rounded-md border px-3 py-2\n                  ${isSubmitting \n                    ? 'bg-gray-50 border-gray-200 cursor-not-allowed' \n                    : 'border-gray-300'\n                  }\n                `}\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={`\n                w-full bg-black text-white py-4 px-4 rounded-md \n                transition-colors relative\n                ${isSubmitting ? 'bg-gray-700 cursor-not-allowed' : 'hover:bg-gray-800'}\n              `}\n            >\n              <span className={isSubmitting ? 'opacity-0' : ''}>\n                Place Order\n              </span>\n              {isSubmitting && (\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                </div>\n              )}\n            </button>\n          </form>\n        </div>\n      </div>\n\n      {/* Toast Notification */}\n      {showToast && (\n        <Toast \n          message=\"Order placed successfully!\"\n          onClose={() => {\n            setShowToast(false)\n            window.location.href = '/success'\n          }}\n          duration={3000}\n        />\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,OAAO;QACP,MAAM;QACN,SAAS;QACT,MAAM;QACN,SAAS;QACT,YAAY;IACd;IAEA,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAClC,6LAAC,+JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,gBAAgB;QAEhB,oBAAoB;QACpB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,0DAA0D;QAC1D;QACA,aAAa;QACb,gBAAgB;IAClB;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2B;;;;;;kCAEzC,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAA6B;;;;;;kDAC3C,6LAAC;wCAAI,WAAU;kDACZ,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;gDAAkB,WAAU;;kEAC3B,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DACC,KAAK,KAAK,KAAK;4DACf,KAAK,KAAK,IAAI;4DACd,WAAU;;;;;;;;;;;kEAGd,6LAAC;;0EACC,6LAAC;gEAAG,WAAU;0EAAe,KAAK,IAAI;;;;;;0EACtC,6LAAC;gEAAE,WAAU;;oEAAgB;oEAAW,KAAK,QAAQ;;;;;;;0EACrD,6LAAC;;oEAAE;oEAAE,CAAC,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE,OAAO,CAAC;;;;;;;;;;;;;;+CAXpC,KAAK,EAAE;;;;;;;;;;kDAiBrB,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;;wDAAE;wDAAQ;wDAAW;;;;;;;8DACtB,6LAAC;;wDAAE;wDAAE,WAAW,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;0CAM9B,6LAAC;gCAAK,UAAU;gCAAc,WAAU;;kDACtC,6LAAC;;0DACC,6LAAC;gDAAM,SAAQ;gDAAQ,WAAU;0DAA0C;;;;;;0DAG3E,6LAAC;gDACC,MAAK;gDACL,IAAG;gDACH,MAAK;gDACL,QAAQ;gDACR,UAAU;gDACV,OAAO,SAAS,KAAK;gDACrB,UAAU;gDACV,WAAW,CAAC;;kBAEV,EAAE,eACE,kDACA,kBACH;gBACH,CAAC;;;;;;;;;;;;kDAIL,6LAAC;;0DACC,6LAAC;gDAAM,SAAQ;gDAAO,WAAU;0DAA0C;;;;;;0DAG1E,6LAAC;gDACC,MAAK;gDACL,IAAG;gDACH,MAAK;gDACL,QAAQ;gDACR,UAAU;gDACV,OAAO,SAAS,IAAI;gDACpB,UAAU;gDACV,WAAW,CAAC;;kBAEV,EAAE,eACE,kDACA,kBACH;gBACH,CAAC;;;;;;;;;;;;kDAIL,6LAAC;;0DACC,6LAAC;gDAAM,SAAQ;gDAAU,WAAU;0DAA0C;;;;;;0DAG7E,6LAAC;gDACC,MAAK;gDACL,IAAG;gDACH,MAAK;gDACL,QAAQ;gDACR,UAAU;gDACV,OAAO,SAAS,OAAO;gDACvB,UAAU;gDACV,WAAW,CAAC;;kBAEV,EAAE,eACE,kDACA,kBACH;gBACH,CAAC;;;;;;;;;;;;kDAIL,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;;kEACC,6LAAC;wDAAM,SAAQ;wDAAO,WAAU;kEAA0C;;;;;;kEAG1E,6LAAC;wDACC,MAAK;wDACL,IAAG;wDACH,MAAK;wDACL,QAAQ;wDACR,UAAU;wDACV,OAAO,SAAS,IAAI;wDACpB,UAAU;wDACV,WAAW,CAAC;;oBAEV,EAAE,eACE,kDACA,kBACH;kBACH,CAAC;;;;;;;;;;;;0DAIL,6LAAC;;kEACC,6LAAC;wDAAM,SAAQ;wDAAa,WAAU;kEAA0C;;;;;;kEAGhF,6LAAC;wDACC,MAAK;wDACL,IAAG;wDACH,MAAK;wDACL,QAAQ;wDACR,UAAU;wDACV,OAAO,SAAS,UAAU;wDAC1B,UAAU;wDACV,WAAW,CAAC;;oBAEV,EAAE,eACE,kDACA,kBACH;kBACH,CAAC;;;;;;;;;;;;;;;;;;kDAKP,6LAAC;;0DACC,6LAAC;gDAAM,SAAQ;gDAAU,WAAU;0DAA0C;;;;;;0DAG7E,6LAAC;gDACC,MAAK;gDACL,IAAG;gDACH,MAAK;gDACL,QAAQ;gDACR,UAAU;gDACV,OAAO,SAAS,OAAO;gDACvB,UAAU;gDACV,WAAW,CAAC;;kBAEV,EAAE,eACE,kDACA,kBACH;gBACH,CAAC;;;;;;;;;;;;kDAIL,6LAAC;wCACC,MAAK;wCACL,UAAU;wCACV,WAAW,CAAC;;;gBAGV,EAAE,eAAe,mCAAmC,oBAAoB;cAC1E,CAAC;;0DAED,6LAAC;gDAAK,WAAW,eAAe,cAAc;0DAAI;;;;;;4CAGjD,8BACC,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC;oDAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAS1B,2BACC,6LAAC,8HAAA,CAAA,UAAK;gBACJ,SAAQ;gBACR,SAAS;oBACP,aAAa;oBACb,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACzB;gBACA,UAAU;;;;;;;;;;;;AAKpB;GAlQwB;;QAC+B,kIAAA,CAAA,UAAO;;;KADtC","debugId":null}}]
}